spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.LongSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.properties.ssl.endpoint.identification.algorithm=https
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.request.timeout.ms=20000
spring.kafka.properties.bootstrap.servers=pkc-43n10.us-central1.gcp.confluent.cloud:9092
spring.kafka.properties.retry.backoff.ms=500
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="AL6EITKB6AT2YKR3" password="coA2b9ZIc0iI27gz4Ks8mJSMfiJheaiwujCesOzDjiuokupMmq5sBXvJvlZIBnOS";
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.schema.registry.basic.auth.user.info=UAEDY5FWIX4AM2VW:l55bkRDjWbe9E2lHoYE8cLH34k75DD+xzv50S0K8amXdDtuQ0xlmPHaos9pn+82L
spring.kafka.properties.schema.registry.url=https://psrc-lz3xz.us-central1.gcp.confluent.cloud
server.port=8085

spring.kafka.streams.replication-factor=3
#
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#
spring.kafka.consumer.group-id=kafka-report
#
spring.cloud.stream.kafka.streams.bindings.ratings.consumer.application-id=movie-demo-processor-1
spring.cloud.stream.kafka.streams.bindings.avg-table.consumer.application-id=movie-demo-processor-2
spring.cloud.stream.kafka.streams.bindings.movies.consumer.application-id=movie-demo-processor-2
logging.level.io.confluent.kafka=debug
# defaults
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.binder.replicationFactor = 3
spring.cloud.stream.kafka.streams.binder.replicationFactor = 3
# movie ratings in
spring.cloud.stream.bindings.ratings.destination=ratings
spring.cloud.stream.bindings.ratings.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.ratings.consumer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.ratings.consumer.valueSerde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
# avg ratings as stream
spring.cloud.stream.bindings.avg-ratings.destination=avg-ratings
spring.cloud.stream.bindings.avg-ratings.producer.useNativeEncoding=true
spring.cloud.stream.kafka.streams.bindings.avg-ratings.producer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.avg-ratings.producer.valueSerde=org.apache.kafka.common.serialization.Serdes$DoubleSerde
# avg ratings as table
spring.cloud.stream.bindings.avg-table.destination=avg-ratings
spring.cloud.stream.bindings.avg-table.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.avg-table.consumer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.avg-table.consumer.valueSerde=org.apache.kafka.common.serialization.Serdes$DoubleSerde
# movies in
spring.cloud.stream.bindings.movies.destination=movies
spring.cloud.stream.bindings.movies.consumer.header-mode=headers
spring.cloud.stream.bindings.movies.consumer.useNativeDecoding=true
spring.cloud.stream.kafka.streams.bindings.movies.consumer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.movies.consumer.valueSerde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
# rated movies
spring.cloud.stream.bindings.rated-movies.destination=rated-movies
spring.cloud.stream.kafka.streams.bindings.rated-movies.producer.keySerde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.rated-movies.producer.value-serde=org.springframework.kafka.support.serializer.JsonSerde
spring.kafka.streams.application-id=movie-processor

